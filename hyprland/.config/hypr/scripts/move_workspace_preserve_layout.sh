#!/bin/bash

# GENERATED BY CHATGPT (but it works)

# Usage: ./script.sh <direction>
# <direction> can be left or right

direction="$1"
temp_ws=99

[[ "$direction" == "right" ]] && offset=1
[[ "$direction" == "left" ]]  && offset=-1
[[ -z "$offset" ]] && echo "Usage: $0 [left|right]" && exit 1

# Get current workspace and focused window
current_ws=$(hyprctl activeworkspace -j | jq .id)
focused_window=$(hyprctl activewindow -j | jq -r .address)
target_ws=$((current_ws + offset))
[[ $target_ws -lt 1 ]] && echo "Invalid workspace number." && exit 1

# Get all window data from current and target workspaces
clients_json=$(hyprctl clients -j)

# Save layout data for current and target workspaces
mapfile -t layout_current < <(echo "$clients_json" | jq -r ".[] | select(.workspace.id==$current_ws) | [.address, .floating, .at[0], .at[1], .size[0], .size[1]] | @tsv")
mapfile -t layout_target  < <(echo "$clients_json" | jq -r ".[] | select(.workspace.id==$target_ws) | [.address, .floating, .at[0], .at[1], .size[0], .size[1]] | @tsv")

# Move current workspace windows to temp
for entry in "${layout_current[@]}"; do
    addr=$(echo "$entry" | cut -f1)
    hyprctl dispatch movetoworkspace "$temp_ws",address:"$addr"
done

# Move target workspace windows to current
for entry in "${layout_target[@]}"; do
    addr=$(echo "$entry" | cut -f1)
    hyprctl dispatch movetoworkspace "$current_ws",address:"$addr"
done

# Move temp windows to target, restoring float layout
for entry in "${layout_current[@]}"; do
    addr=$(echo "$entry" | cut -f1)
    floating=$(echo "$entry" | cut -f2)
    x=$(echo "$entry" | cut -f3)
    y=$(echo "$entry" | cut -f4)
    w=$(echo "$entry" | cut -f5)
    h=$(echo "$entry" | cut -f6)

    hyprctl dispatch movetoworkspace "$target_ws",address:"$addr"

    if [[ "$floating" == "true" ]]; then
        hyprctl dispatch togglefloating,address:"$addr"
        hyprctl dispatch movewindowpixel exact "$x" "$y",address:"$addr"
        hyprctl dispatch resizewindowpixel exact "$w" "$h",address:"$addr"
    fi
done

# Focus target workspace
hyprctl dispatch workspace "$target_ws"

# Refocus previously focused window (now in new workspace)
sleep 0.1  # give Hyprland time to update
hyprctl dispatch focuswindow address:"$focused_window"
